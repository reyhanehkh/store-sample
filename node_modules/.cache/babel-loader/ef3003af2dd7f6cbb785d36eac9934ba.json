{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\header\\\\src\\\\Reviews.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { FaChevronLeft, FaChevronRight, FaQuoteRight } from 'react-icons/fa';\nimport data from './data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Reviews() {\n  _s();\n\n  const [index, setIndex] = useState(0);\n  const {\n    name,\n    job,\n    image,\n    text\n  } = data[index];\n  console.log(index);\n\n  const checkNumber = number => {\n    if (number > data.length - 1) {\n      return 0;\n    }\n\n    if (number < 0) {\n      return data.length - 1;\n    }\n\n    return number;\n  };\n\n  const nextSlide = () => {\n    setIndex(index => {\n      let newIndex = index + 1;\n      return checkNumber(newIndex);\n    });\n  };\n\n  const prevSlide = () => {\n    setIndex(index => {\n      let newIndex = index - 1;\n      return checkNumber(newIndex);\n    });\n  };\n\n  const randomPerson = () => {\n    let randomNumber = Math.floor(Math.random() * data.length);\n\n    if (randomNumber === index) {\n      randomNumber = index + 1;\n    }\n\n    setIndex(checkNumber(randomNumber));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reviews\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"review-img\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"author\",\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"job\",\n      children: job\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"review-button\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: nextSlide,\n        children: /*#__PURE__*/_jsxDEV(FaChevronRight, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 49\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: prevSlide,\n        children: /*#__PURE__*/_jsxDEV(FaChevronLeft, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 49\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"random-btn\",\n      onClick: randomPerson,\n      children: \"\\u0631\\u0646\\u062F\\u0645\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 11\n  }, this);\n}\n\n_s(Reviews, \"x2oTrUAHknTo02Ld7gcDOqaxQ8E=\");\n\n_c = Reviews;\nexport default Reviews;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reviews\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/header/src/Reviews.js"],"names":["React","useState","FaChevronLeft","FaChevronRight","FaQuoteRight","data","Reviews","index","setIndex","name","job","image","text","console","log","checkNumber","number","length","nextSlide","newIndex","prevSlide","randomPerson","randomNumber","Math","floor","random"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,aAAT,EAAwBC,cAAxB,EAAwCC,YAAxC,QAA4D,gBAA5D;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AAEd,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM;AAACQ,IAAAA,IAAD;AAAMC,IAAAA,GAAN;AAAUC,IAAAA,KAAV;AAAgBC,IAAAA;AAAhB,MAAwBP,IAAI,CAACE,KAAD,CAAlC;AAEAM,EAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;;AAEA,QAAMQ,WAAW,GAAIC,MAAD,IAAY;AAC3B,QAAGA,MAAM,GAAGX,IAAI,CAACY,MAAL,GAAa,CAAzB,EAA4B;AACvB,aAAO,CAAP;AACJ;;AACD,QAAGD,MAAM,GAAG,CAAZ,EAAc;AACT,aAAOX,IAAI,CAACY,MAAL,GAAc,CAArB;AACJ;;AACD,WAAOD,MAAP;AACJ,GARD;;AAUA,QAAME,SAAS,GAAG,MAAM;AACpBV,IAAAA,QAAQ,CAAED,KAAD,IAAW;AACf,UAAIY,QAAQ,GAAGZ,KAAK,GAAG,CAAvB;AACA,aAAOQ,WAAW,CAACI,QAAD,CAAlB;AACJ,KAHO,CAAR;AAIH,GALD;;AAOA,QAAMC,SAAS,GAAG,MAAM;AACnBZ,IAAAA,QAAQ,CAAED,KAAD,IAAW;AACf,UAAIY,QAAQ,GAAGZ,KAAK,GAAG,CAAvB;AACA,aAAOQ,WAAW,CAACI,QAAD,CAAlB;AACJ,KAHO,CAAR;AAIH,GALF;;AAQC,QAAME,YAAY,GAAG,MAAM;AACtB,QAAIC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAYD,IAAI,CAACE,MAAL,KAAgBpB,IAAI,CAACY,MAAjC,CAAnB;;AACA,QAAGK,YAAY,KAAKf,KAApB,EAA0B;AACrBe,MAAAA,YAAY,GAAGf,KAAK,GAAG,CAAvB;AACJ;;AACDC,IAAAA,QAAQ,CAACO,WAAW,CAACO,YAAD,CAAZ,CAAR;AACJ,GAND;;AAQD,sBACK;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACK;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACK;AAAK,QAAA,GAAG,EAAEX,KAAV;AAAiB,QAAA,GAAG,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,YADL,eAIK;AAAI,MAAA,SAAS,EAAC,QAAd;AAAA,gBACKF;AADL;AAAA;AAAA;AAAA;AAAA,YAJL,eAOK;AAAG,MAAA,SAAS,EAAC,KAAb;AAAA,gBAAoBC;AAApB;AAAA;AAAA;AAAA;AAAA,YAPL,eAQK;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,gBAAuBE;AAAvB;AAAA;AAAA;AAAA;AAAA,YARL,eASK;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACK;AAAQ,QAAA,OAAO,EAAEM,SAAjB;AAAA,+BAA4B,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAA5B;AAAA;AAAA;AAAA;AAAA,cADL,eAEK;AAAQ,QAAA,OAAO,EAAEE,SAAjB;AAAA,+BAA4B,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAA5B;AAAA;AAAA;AAAA;AAAA,cAFL;AAAA;AAAA;AAAA;AAAA;AAAA,YATL,eAaK;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAA+B,MAAA,OAAO,EAAEC,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbL;AAAA;AAAA;AAAA;AAAA;AAAA,UADL;AAiBJ;;GAzDQf,O;;KAAAA,O;AA2DT,eAAeA,OAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport { FaChevronLeft, FaChevronRight, FaQuoteRight } from 'react-icons/fa';\r\nimport data from './data';\r\n\r\nfunction Reviews() {\r\n\r\n     const [index, setIndex] = useState(0);\r\n     const {name,job,image,text} = data[index];\r\n\r\n     console.log(index);\r\n\r\n     const checkNumber = (number) => {\r\n          if(number > data.length -1 ){\r\n               return 0;\r\n          }\r\n          if(number < 0){\r\n               return data.length - 1\r\n          }\r\n          return number;\r\n     }\r\n\r\n     const nextSlide = () => {\r\n         setIndex((index) => {\r\n              let newIndex = index + 1;\r\n              return checkNumber(newIndex)\r\n         }) \r\n     }\r\n\r\n     const prevSlide = () => {\r\n          setIndex((index) => {\r\n               let newIndex = index - 1;\r\n               return checkNumber(newIndex)\r\n          }) \r\n      }\r\n\r\n\r\n      const randomPerson = () => {\r\n           let randomNumber = Math.floor( Math.random() * data.length)\r\n           if(randomNumber === index){\r\n                randomNumber = index + 1\r\n           }\r\n           setIndex(checkNumber(randomNumber))\r\n      }\r\n\r\n     return (\r\n          <div className=\"reviews\">\r\n               <div className=\"review-img\">\r\n                    <img src={image} alt=\"\" />\r\n               </div>\r\n               <h4 className=\"author\">\r\n                   {name}\r\n               </h4>\r\n               <p className=\"job\">{job}</p>\r\n               <div className=\"info\">{text}</div>\r\n               <div className=\"review-button\">\r\n                    <button onClick={nextSlide}><FaChevronRight /></button>\r\n                    <button onClick={prevSlide}><FaChevronLeft /></button>\r\n               </div>\r\n               <button className=\"random-btn\" onClick={randomPerson}>رندم</button>\r\n          </div>\r\n     )\r\n}\r\n\r\nexport default Reviews\r\n"]},"metadata":{},"sourceType":"module"}